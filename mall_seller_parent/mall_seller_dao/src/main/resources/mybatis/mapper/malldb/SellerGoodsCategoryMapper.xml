<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.yunyihenkey.seller.dao.malldb.mapper.SellerGoodsCategoryMapper">
	<resultMap id="BaseResultMap"
		type="com.yunyihenkey.seller.dao.malldb.vo.param.goodsController.SellerGoodsCategoryInfoResult">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createDate" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, sort_order, create_time
	</sql>

	<!-- 根据店铺id查询分类 -->
	<select id="selectAllByShopId" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from seller_goods_category where shop_id = #{shopId}
	</select>

	<!-- 关联查询商品分类 -->
	<select id="selectAllWithGoodsNumByShopId" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select count(b.id) as goodsNum,
		a.id, a.name, a.sort_order,
		a.create_time
		from seller_goods_category a
		left join seller_goods_info b
		on a.id =
		b.category_id
		where a.shop_id =
		#{shopId}
		group by a.id
	</select>

	<!-- 查询分类名称 -->
	<select id="selectByShopIdAndNameWithPage" parameterType="hashmap"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from seller_goods_category where shop_id = #{shopId} and name like
		CONCAT('%',#{name},'%')
	</select>

	<!-- 查询分类是否存在 -->
	<select id="selectByIdWithShopId" parameterType="hashmap"
		resultType="java.lang.Integer">
		select count(0)
		from seller_goods_category where id = #{id}
		and shop_id = #{shopId}
	</select>

	<!-- 删除分类 -->
	<delete id="deleteByPrimaryKeyWithShopId" parameterType="hashmap">
		delete
		from seller_goods_category
		where id =#{id} and shop_id = #{shopId}
	</delete>

	<!-- 修改分类 -->
	<update id="updateByPrimaryKeyWithShopId"
		parameterType="com.yunyihenkey.basedao.malldb.basevo.SellerGoodsCategory">
		update seller_goods_category set
		name = #{name},
		sort_order = #{sortOrder},
		update_user = #{updateUser},
		update_time =
		#{updateDate}
		where id =#{id} and shop_id = #{shopId}
	</update>

</mapper>